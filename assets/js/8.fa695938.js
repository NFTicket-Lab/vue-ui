(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{267:function(e,a,t){"use strict";t.r(a);var r=t(38),s=Object(r.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"dysonring-vue-keyring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dysonring-vue-keyring","aria-hidden":"true"}},[e._v("#")]),e._v(" '@dysonring/vue-keyring'")]),e._v(" "),t("p",[e._v("A wrapper extending the base @polkadot/keyring interface for usage in the browser: Key management of user accounts including generation and retrieval of keyring pairs from a variety of input combinations.")]),e._v(" "),t("h2",{attrs:{id:"usage-examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usage-examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Usage Examples")]),e._v(" "),t("p",[e._v("All module methods are exposed through a single default export.")]),e._v(" "),t("h3",{attrs:{id:"regular"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#regular","aria-hidden":"true"}},[e._v("#")]),e._v(" Regular")]),e._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" keyring "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" @dysonring"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("vue"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("keyring\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h2",{attrs:{id:"faq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#faq","aria-hidden":"true"}},[e._v("#")]),e._v(" FAQ")]),e._v(" "),t("ul",[t("li",[e._v("Difference between Keyring Accounts and Addresses?\n"),t("ul",[t("li",[e._v("From the perspective of the keyring, it saves a particular user's unlocked identities as an account, a la keyring.saveAccount(pair, password). So with these accounts you are able to send and sign transactions.")]),e._v(" "),t("li",[e._v("To save addresses without unlocking them (i.e. because a user might want to have easy access to addresses they frequently transact with), use keyring.saveAddress(address, meta)")])])]),e._v(" "),t("li",[e._v("What are 'external' accounts, i.e. when to set the "),t("code",[e._v("isExternal")]),e._v(" meta key to true?\n"),t("ul",[t("li",[e._v("An external account is one where the keys are not managed by keyring, e.g. in Parity Signer or Ledger Nano.")])])]),e._v(" "),t("li",[e._v("SS58 Encode / Decode?\n"),t("ul",[t("li",[e._v("SS58 is a simple address format designed for Substrate based chains. You can read about its specification in more detail in the "),t("a",{attrs:{href:"https://wiki.parity.io/External-Address-Format-(SS58)",target:"_blank",rel:"noopener noreferrer"}},[e._v("Parity Wiki"),t("OutboundLink")],1),e._v(".")])])])])])},[],!1,null,null,null);a.default=s.exports}}]);